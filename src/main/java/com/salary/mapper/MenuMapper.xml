<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.salary.mapper.MenuMapper">
    <resultMap id="BaseResultMap" type="com.salary.model.Menu">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="url" jdbcType="VARCHAR" property="url" />
        <result column="path" jdbcType="VARCHAR" property="path" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="parent_id" jdbcType="INTEGER" property="parentId" />
        <result column="level" jdbcType="INTEGER" property="level" />
        <result column="enabled" jdbcType="BIT" property="enabled" />
    </resultMap>
    <resultMap id="MenusWithChildren" type="com.salary.model.Menu">
        <id column="m1id" jdbcType="INTEGER" property="id" />
        <result column="m1url" jdbcType="VARCHAR" property="url" />
        <result column="m1path" jdbcType="VARCHAR" property="path" />
        <result column="m1name" jdbcType="VARCHAR" property="name" />
        <result column="m1parentid" jdbcType="INTEGER" property="parentId" />
        <result column="m1level" jdbcType="INTEGER" property="level" />
        <result column="m1enabled" jdbcType="BIT" property="enabled" />
        <collection property="children" ofType="Menu">
            <id column="m2id" jdbcType="INTEGER" property="id" />
            <result column="m2url" jdbcType="VARCHAR" property="url" />
            <result column="m2path" jdbcType="VARCHAR" property="path" />
            <result column="m2name" jdbcType="VARCHAR" property="name" />
            <result column="m2parentid" jdbcType="INTEGER" property="parentId" />
            <result column="m2level" jdbcType="INTEGER" property="level" />
            <result column="m2enabled" jdbcType="BIT" property="enabled" />
        </collection>
    </resultMap>
    <resultMap id="AuthResultMap" type="com.salary.model.Menu">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="url" jdbcType="VARCHAR" property="url" />
        <result column="path" jdbcType="VARCHAR" property="path" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="parent_id" jdbcType="INTEGER" property="parentId" />
        <result column="level" jdbcType="INTEGER" property="level" />
        <result column="enabled" jdbcType="BIT" property="enabled" />
        <collection property="children" ofType="com.salary.model.Menu" select="com.salary.mapper.MenuMapper.selectAuthByPid" column="id">
        </collection>
    </resultMap>
<!--    <resultMap id="RoleAuthResultMap" type="com.salary.model.Menu">-->
<!--        <id column="id" jdbcType="INTEGER" property="id" />-->
<!--        <result column="url" jdbcType="VARCHAR" property="url" />-->
<!--        <result column="path" jdbcType="VARCHAR" property="path" />-->
<!--        <result column="name" jdbcType="VARCHAR" property="name" />-->
<!--        <result column="parent_id" jdbcType="INTEGER" property="parentId" />-->
<!--        <result column="level" jdbcType="INTEGER" property="level" />-->
<!--        <result column="enabled" jdbcType="BIT" property="enabled" />-->
<!--        <collection property="children" ofType="com.salary.model.Menu" select="com.salary.mapper.MenuMapper.selectRoleAuthByPid" column="id">-->
<!--        </collection>-->
<!--    </resultMap>-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.salary.model.Menu">
    insert into menu (id, url, path,
      name, parent_id, level,
      enabled)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{level,jdbcType=INTEGER},
      #{enabled,jdbcType=BIT})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.salary.model.Menu">
    update menu
    set url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, url, path, name, parent_id, level, enabled
    from menu
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, url, path, name, parent_id, level, enabled
    from menu where id != 1 order by url desc
  </select>
    <select id="selectByUserId" parameterType="java.lang.String" resultMap="MenusWithChildren">
        select m1.id        m1id,
               m1.url       m1url,
               m1.path      m1path,
               m1.name      m1name,
               m1.parent_id m1parentid,
               m1.level     m1level,
               m1.enabled   m1enabled,
               m2.id        m2id,
               m2.url       m2url,
               m2.path      m2path,
               m2.name      m2name,
               m2.parent_id m2parentid,
               m2.level     m2level,
               m2.enabled   m2enabled
        from menu m1,
             menu m2
        where m1.parent_id = 1
          and m2.parent_id = m1.id
          and m2.id in
              (
                  select menu_id
                  from user_role ur,
                       menu_role mr
                  where ur.user_id = #{id,jdbcType=VARCHAR}
                    and ur.role_id = mr.role_id
              )
        order by m1.id, m2.id
    </select>
    <select id="selectAuthByPid" resultMap="AuthResultMap">
        select * from menu where parent_id = #{id} order by id
    </select>
    <select id="selectAllAuth" resultMap="AuthResultMap">
        select * from menu where id != 1 and id != 2 and parent_id =1 order by id
    </select>
<!--    <select id="selectRoleAuthByPid" resultMap="RoleAuthResultMap">-->
<!--        select * from menu where parent_id = #{id} and id in(select menu_id from menu_role where role_id = #{rid}) order by id-->
<!--    </select>-->
<!--    <select id="selectRoleAllAuthByRId" resultMap="RoleAuthResultMap">-->
<!--        select * from menu where id != 1 and id != 2 and parent_id =1 and id in(select menu_id from menu_role where role_id =#{rid}) order by id-->
<!--    </select>-->
</mapper>